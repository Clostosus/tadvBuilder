(()=>{var u=class{constructor(e,t="",o=null,r=null){if(this.key=e,this.text=t,this.parent=o,this.choices=new Map,r instanceof Map)for(let[n,c]of r)this.choices.set(n,c);else if(Array.isArray(r))for(let n of r)n.next&&n.text&&this.choices.set(n.next,n.text)}addChoice(e,t){return this.choices.has(t)?!1:(this.choices.set(t,e),!0)}updateChoice(e,t){return this.choices.has(e)?(this.choices.set(e,t),!0):!1}removeChoice(e){return this.choices.delete(e)}getAllChoices(){return Array.from(this.choices,([e,t])=>({text:t,next:e}))}static fromJson(e,t){if(!e||!t)return null;let o=null;if(typeof t=="string")try{o=JSON.parse(t)}catch(n){return console.error(`Failed to parse JSON for scene ${e}: ${n}`),null}else if(typeof t=="object")o=t;else return console.error(`Failed to parse JSON for scene ${e}: Invalid JSON type`),null;if(!o.text||typeof o.text!="string")return console.error(`Scene ${e} missing text property.`),null;let r=new u(e,o.text,null,[]);if(Array.isArray(o.choices))for(let n of o.choices)!n||typeof n.text!="string"||typeof n.next!="string"||r.addChoice(n.text,n.next);return r}toJSON(){let e=[];for(let[t,o]of this.choices.entries())e.push({text:o,next:t});return e.length===0?{text:this.text}:{text:this.text,choices:e}}};var d=class{constructor(e){this.sceneClass=e,this.scenes=new Map,this.root=null}addScene(e){if(!(e instanceof this.sceneClass)||this.scenes.has(e.key))return!1;if(this.scenes.set(e.key,e),!this.root)return this.root=e,!0;if(!e.parent&&this.root&&this.scenes.size>0){let t=this.findParent(e.key);t?(e.parent=t,t.addChoice(e.text||`to ${e.key}`,e.key)):(this.root.addChoice(e.text||`to ${e.key}`,e.key),e.parent=this.root)}return e.parent&&this.scenes.has(e.parent.key)&&this.scenes.get(e.parent.key).addChoice(e.text||`to ${e.key}`,e.key),!0}findParent(e){for(let t of this.scenes.values())if(t.choices instanceof Map&&t.choices.has(e))return t;return null}getScene(e){return this.scenes.get(e)||null}getAllScenesDFS(){if(!this.root)return[];let e=[],t=[];for(t.push({scene:this.root,depth:0});t.length>0;){let{scene:o,depth:r}=t.pop();e.push({scene:o,depth:r});let n=[];for(let[c]of o.choices.entries()){let l=this.getScene(c);l&&n.push(l)}for(let c=n.length-1;c>=0;c--)t.push({scene:n[c],depth:r+1})}return e}toJSON(){let e={};for(let[t,o]of this.scenes.entries())e[t]=o.toJSON();return e}};var h=class{constructor(){throw new Error("Static class")}static async loadFromJson(e,t,o){if(!e||typeof e!="string")return null;let r=null;try{let c=await fetch(e);if(!c.ok)return null;r=await c.json()}catch{return null}if(!r||typeof r!="object")return null;let n=new o(t);for(let[c,l]of Object.entries(r)){let a=t.fromJson(c,l);if(a)n.addScene(a);else return console.warn(`Failed to load scene ${c}`),null}return n.scenes.size===0?null:(console.log("Story loaded from Json"),n)}static async saveToJson(e,t){if(!e||!t||typeof t!="string")return console.error("Ungültige Eingabeparameter in saveToJson: story = ",e,", filename = ",t),!1;let o=e.toJSON();try{await fetch(t,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)}),console.log("Story saved to Json")}catch(r){return console.error("Failed to save story to Json:"+r),!1}}};var i=new d(u);function p(s=document.getElementById("tree-output")){if(!s)return;if(!i||!i.root){s.textContent="(noch kein Baum erstellt)";return}let e=i.getAllScenesDFS(),t=[];for(let r=0;r<e.length;r++){let{scene:n,depth:c}=e[r],l="";for(let a=0;a<c;a++)l+=a===c-1?"|_ ":"   ";t.push(l+n.key)}let o=t.join(`
`);s.textContent=o}function w(s=document.getElementById("choices-container")){let e=document.createElement("div");e.className="choice-inputs",e.innerHTML=`
        <input type="text" class="choice-text" placeholder="Entscheidungstext">
        <input type="text" class="choice-next" placeholder="Nächste Szene (Schlüssel)">
      `,s.appendChild(e)}function v(){let s=document.getElementById("scene-key").value.trim(),e=document.getElementById("scene-text").value.trim();if(!s||!e)return alert("Bitte Schlüssel und Text ausfüllen.");let t=document.querySelectorAll(".choice-inputs"),o=new Map;t.forEach(l=>{let a=l.querySelector(".choice-text").value.trim(),m=l.querySelector(".choice-next").value.trim();a&&m&&o.set(m,a)}),i.addScene(new u(s,e,null,o)),g(s),p(),document.getElementById("scene-key").value="",document.getElementById("scene-text").value="";let r=document.getElementById("choices-container");r.innerHTML=`<div class="choice-inputs">
    <input type="text" class="choice-text" placeholder="Entscheidungstext">
    <input type="text" class="choice-next" placeholder="Nächste Szene (Schlüssel)">
  </div>`;let n=document.createElement("div");n.textContent=`✅ Szene '${s}' wurde gespeichert.`,n.style.backgroundColor="#dcfce7",n.style.border="1px solid #22c55e",n.style.color="#166534",n.style.padding="0.5rem 1rem",n.style.borderRadius="6px",n.style.marginTop="1rem",n.style.fontSize="0.95rem",document.querySelectorAll(".section")[0].appendChild(n),setTimeout(()=>n.remove(),3e3)}function g(s){let e=i.getScene(s);if(!e)return;let t=`<p><strong>${e.key}</strong>: ${e.text}</p>`;for(let[o,r]of e.choices.entries())t+=`<button disabled>${r} -> ${o}</button><br>`;document.getElementById("preview").innerHTML=t}function y(){if(!i.root){alert("Keine 'start'-Szene gefunden.");return}S("start")}function S(s){let e=document.getElementById("play-area"),t=i.getScene(s);if(!t){e.innerHTML=`<p><em>Szene '${s}' nicht gefunden.</em></p>`;return}let o=`<p><strong>${t.key}</strong>: ${t.text}</p>`;for(let[r,n]of t.choices.entries())o+=`<button onclick="renderScene('${r}')">${n}</button><br>`;e.innerHTML=o}window.addChoiceField=w;window.addScene=v;window.startStory=y;window.renderTree=p;window.renderPreview=g;window.renderScene=S;var x=document.getElementById("json-file"),C=document.getElementById("import-json"),k=document.getElementById("export-json"),f=document.getElementById("import-status");window.currentStory=null;C.addEventListener("click",async()=>{if(!x.files.length){f.textContent="Bitte zuerst eine JSON-Datei auswählen.";return}let s=x.files[0],e=URL.createObjectURL(s);try{if(i=await h.loadFromJson(e,u,d),!i){f.textContent="Fehler beim Laden: Story konnte nicht geladen werden.";return}window.currentStory=i,document.getElementById("output").textContent=JSON.stringify(i.toJSON(),null,2),f.textContent=`"${s.name}" erfolgreich geladen (${i.scenes.size} Szenen).`,typeof p=="function"&&p(),typeof y=="function"&&y()}catch(t){f.textContent="Fehler beim Laden: "+t.message}finally{URL.revokeObjectURL(e)}});k.addEventListener("click",()=>{if(!window.currentStory){alert("Keine Story zum Exportieren vorhanden.");return}h.saveToJson(window.currentStory,"story_export.json")});})();
